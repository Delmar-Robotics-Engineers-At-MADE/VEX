{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><comment id=\"pl23tJyZM(Bhz;a:P6*V\" x=\"727\" y=\"94\" h=\"259\" w=\"542\">Project: \n3-Wire Line Tracker Sensing\n\nDescription: \nThis example will show all of the available blocks for using the 3-Wire Line Tracker Sensor\n\nConfiguration: \nV5 Speedbot (Drivetrain 2-motor, No Gyro)\nLine Tracker in 3-Wire Port A</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_other_comment\" id=\"ime+)c}(KPRF5!4;Jqis\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\";M$|y]%hg3N$3snbhy6(\"><field name=\"comment\">Print all Line Tracker sensing values to the screen in an infinite loop</field></shadow></value><next><block type=\"v5_control_forever\" id=\"aZfN~=b5YPb?:lV|;SX?\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"^Fr/U~x82u`EaH52AN2=\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"i3:dK7fpe/`5s/;EpI-a\"><field name=\"comment\">Clear the screen and set the cursor to top left corner on each loop</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\"i{`IdLVjQ,_Uw9{.+Z:~\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"`e3CQ3OQA$YPhQ4s*`+V\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"@#KkT*kudyf{*mDcWP3V\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"rLDp6_vfsCE,:zWmcMd/\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"ir-t?1HBxw.Wo-zt-Uov\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"A?2@DHP]~*teSGI9c]^k\"><field name=\"TEXT\">Reflectivity: </field></shadow></value><next><block type=\"v5_looks_print\" id=\"$D.;/-n+ng|AM)]]E/2/\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"B;$nm4D2%44AAt$jD].a\"><field name=\"TEXT\"></field></shadow><block type=\"v5_sensing_reflectivity_of\" id=\"NoBl4/LQfGSo*-,NH1~`\"><field name=\"LINETRACKER\">LineTrackerA</field></block></value><next><block type=\"v5_looks_next_row\" id=\"}C60Q0VN)z=FlL_tQ}V}\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_other_comment\" id=\"h6c#U:CcbL*|Nof%huUV\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"3_+Zm(2iz?4QYLXm.ebO\"><field name=\"comment\">A brief delay to allow text to be printed without distortion or tearing</field></shadow></value><next><block type=\"v5_control_wait\" id=\"K^#RSrj[;6qzi?C19@-T\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"~,C=I3TFd=]-)GQvyLW?\"><field name=\"NUM\">0.05</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":22},{"port":[1],"name":"LineTrackerA","customName":false,"deviceType":"LineTracker","setting":{},"triportSourcePort":22}],"slot":6,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\nline LineTrackerA = line(Brain.ThreeWirePort.A);\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Print all Line Tracker sensing values to the screen in an infinite loop\n  while (true) {\n    // Clear the screen and set the cursor to top left corner on each loop\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Reflectivity: \");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(LineTrackerA.reflectivity()));\n    Brain.Screen.newLine();\n    // A brief delay to allow text to be printed without distortion or tearing\n    wait(0.05, seconds);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}"}