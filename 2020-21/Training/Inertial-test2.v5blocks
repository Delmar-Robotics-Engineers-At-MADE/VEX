{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><comment id=\"}%(3{t$?wc_*?/?$60iT\" x=\"834\" y=\"77\" h=\"255\" w=\"430\">Project:\nInertial Sensing\n\nDescription:\nThis example will show all of the available commands for using the Inertial Sensor\n\nConfiguration:\nV5 Speedbot (Drivetrain 2-motor, No Gyro)\nInertial Sensor in Port 2  </comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_print\" id=\"xXf9:R*l(o]%r/VrjTT=\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"]v+7thuPY%]36]BuEGwa\"><field name=\"TEXT\">Calibrating!</field></shadow></value><next><block type=\"v5_looks_set_fill_color\" id=\"./MeP67[wH2ct{.229=D\"><field name=\"COLOR\">red</field><next><block type=\"v5_looks_draw_rectangle\" id=\"(dY[/c4{bmpZEB6]{A*B\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"-{k0(44`rP/qUd*x,A2G\"><field name=\"NUM\">50</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"U*V+Qg#.kgr|Z@p^vz8`\"><field name=\"NUM\">50</field></shadow></value><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"ZAdYRAu;+-{?U{V_hCi_\"><field name=\"NUM\">400</field></shadow></value><value name=\"HEIGHT\"><shadow type=\"math_whole_number\" id=\"/V7;NA]uj?!yqAD:f#r|\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_looks_set_fill_color\" id=\"Id9Na~o,@XJ/F%ou.un/\"><field name=\"COLOR\">transparent</field><next><block type=\"v5_sensing_calibrate_gyro\" id=\"|U:p_Wg9fG0,z8r[|S6Y\"><field name=\"GYRO\">InertialSensor</field><next><block type=\"v5_control_wait\" id=\"0LKsFsM~*=o]+AztF/{h\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"y?:W5oUn`4]xH+=M2kS7\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"v5_other_comment\" id=\"fM[3*(Jt[K/I}%PR2g$,\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"ud1W|F}egAh8uoh4Ys~/\"><field name=\"comment\">Print all Inertial sensing values to the screen in an infinite loop</field></shadow></value><next><block type=\"v5_control_repeat_until\" id=\"DUHPm^6gJJ=!Wl,D-mJ-\"><value name=\"CONDITION\"><block type=\"v5_sensing_screen_pressed\" id=\"%0xkx-#g-;W0$NH4,|X4\"></block></value><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"+*a(j.y1~:$dCokYA8l;\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"s~Zx)wA/wigkB`xtn*VE\"><field name=\"comment\">Clear the screen and set the cursor to top left corner on each loop</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\")XqNq56czxa[nA^?D/xX\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"qFg?}[dc`/+sEKC7uTVa\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"Dd7GL8w5S#sJg=MjPT?b\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"b/?*OAACd/4]jZyA4wB9\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"=*/^ac4?A[c#2IIh+J@j\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"vtdMf$^f0+GULe5DvU5p\"><field name=\"TEXT\">Heading:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"t-PK}]mD.$Xa$Vq(;4N9\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"2y1{#*T_ar6~(gTb`Kt`\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_heading_of_gyro\" id=\"*u`Wfy,Mu.2KS^bS~u)*\"><field name=\"GYRO\">InertialSensor</field></block></value><next><block type=\"v5_looks_next_row\" id=\"Zn^?C2~krE(GL@pvENen\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"Of_EnP#1blU5xxFb|(Jy\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"WX5MjQ6tu2=EV!d?|}F*\"><field name=\"TEXT\">Rotation:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"u-O`F^=lc9eH#U{.~3_$\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"{BKA,@J`ptoHPpYAES;1\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_rotation_of_gyro\" id=\"ub0rRpcIG~oE3-zMWx#G\"><field name=\"GYRO\">InertialSensor</field></block></value><next><block type=\"v5_other_comment\" id=\"u1{DkvZF[x19_mcXpevZ\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"NgM9:j)n}l67/81JqL*X\"><field name=\"comment\">A brief delay to allow text to be printed without distortion or tearing</field></shadow></value><next><block type=\"v5_control_wait\" id=\"_J$11(3+trTaoS,0a..]\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"CH50QzoZXG!M[+sQFN^?\"><field name=\"NUM\">0.1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"v5_looks_set_fill_color\" id=\"ToRYDPe*-MnwT?NP#aC;\"><field name=\"COLOR\">green</field><next><block type=\"v5_looks_draw_circle\" id=\"K~FR8A4U_l1)K=|6wIct\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"*.r/9a@*}0ltUy,#;_1c\"><field name=\"NUM\">250</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"P+@--e/vgZ+{;kHAcC`Y\"><field name=\"NUM\">125</field></shadow></value><value name=\"RADIUS\"><shadow type=\"math_whole_number\" id=\"kyq{:P|e^D+$y|f%d4O8\"><field name=\"NUM\">75</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":22},{"port":[16],"name":"InertialSensor","customName":true,"deviceType":"Inertial","setting":{},"triportSourcePort":22}],"slot":7,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\ninertial InertialSensor = inertial(PORT16);\n\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"Calibrating!\");\n  Brain.Screen.setFillColor(red);\n  Brain.Screen.drawRectangle(50, 50, 400, 100);\n  Brain.Screen.setFillColor(transparent);\n  InertialSensor.startCalibration();\n  while (InertialSensor.isCalibrating()) { task::sleep(50); }\n  wait(3.0, seconds);\n  // Print all Inertial sensing values to the screen in an infinite loop\n  while (!Brain.Screen.pressing()) {\n    // Clear the screen and set the cursor to top left corner on each loop\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Heading:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(InertialSensor.heading(degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Rotation:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(InertialSensor.rotation(degrees)));\n    // A brief delay to allow text to be printed without distortion or tearing\n    wait(0.1, seconds);\n  wait(5, msec);\n  }\n  Brain.Screen.setFillColor(green);\n  Brain.Screen.drawCircle(250, 125, 75);\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}"}