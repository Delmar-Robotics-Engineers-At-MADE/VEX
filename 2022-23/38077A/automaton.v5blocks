{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"170\" y=\"-10\"><next><block type=\"v5_motion_set_motor_position\" id=\"Oxb5ASV$KCG(*LL9)wKy\"><field name=\"MOTOR\">Fork</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"A`gE}AcsPS_TvCCX2i;E\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_spin_to_position\" id=\"OfSC,)YQv5EyK,z9}Icj\"><field name=\"MOTOR\">Fork</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"}D}yaoVBFnIr]!!l4[c_\"><field name=\"NUM\">200</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"3W@.7;zud]U2w!Ub16sO\"><field name=\"MOTOR\">rightmotorgroup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"uyoqIGZ_68:Hg]!,$~-N\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"`2oQBkiATezM@(s5lh}Y\"><field name=\"MOTOR\">rightmotorgroup</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"N3fhL@Z[sq4i2m;b#]u)\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_motion_spin\" id=\"i|#c1;Y${YH?$dD$wkQW\"><field name=\"MOTOR\">rightmotorgroup</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"J)oHr]SwW${Dnk+T^)K%\"><field name=\"MOTOR\">leftmotorgroup</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait\" id=\"K-@vnMZFaJDI,s#y^(Vc\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"P{#9bGuv6zw}y!CpgBl6\"><field name=\"NUM\">2.4</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,2],"name":"rightmotorgroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[19,20],"name":"leftmotorgroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[8,9],"name":"Fork","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor rightmotorgroupMotorA = motor(PORT1, ratio18_1, true);\nmotor rightmotorgroupMotorB = motor(PORT2, ratio18_1, false);\nmotor_group rightmotorgroup = motor_group(rightmotorgroupMotorA, rightmotorgroupMotorB);\n\nmotor leftmotorgroupMotorA = motor(PORT19, ratio18_1, true);\nmotor leftmotorgroupMotorB = motor(PORT20, ratio18_1, false);\nmotor_group leftmotorgroup = motor_group(leftmotorgroupMotorA, leftmotorgroupMotorB);\n\nmotor ForkMotorA = motor(PORT8, ratio18_1, true);\nmotor ForkMotorB = motor(PORT9, ratio18_1, false);\nmotor_group Fork = motor_group(ForkMotorA, ForkMotorB);\n\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Fork.setPosition(0.0, degrees);\n  Fork.spinToPosition(200.0, degrees, true);\n  rightmotorgroup.setVelocity(100.0, percent);\n  rightmotorgroup.setVelocity(100.0, percent);\n  rightmotorgroup.spin(forward);\n  leftmotorgroup.spin(forward);\n  wait(2.4, seconds);\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}