{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n# vex-vision-config:begin\nvision_21__SIG_1 = Signature(1, 5079, 5957, 5518,273, 655, 464,3, 0)\nvision_21__SIG_2 = Signature(2, 0, 0, 0,0, 0, 0,3, 0)\nvision_21 = Vision(Ports.PORT21, 55, vision_21__SIG_1, vision_21__SIG_2)\n# vex-vision-config:end\ncontroller_1 = Controller(PRIMARY)\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain_gyro = Gyro(brain.three_wire_port.b)\ndrivetrain = SmartDrive(left_drive_smart, right_drive_smart, drivetrain_gyro, 319.19, 320, 40, MM, 1)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\ndef calibrate_drivetrain():\n    # Calibrate the Drivetrain Gyro\n    sleep(200, MSEC)\n    brain.screen.print(\"Calibrating\")\n    brain.screen.next_row()\n    brain.screen.print(\"Gyro\")\n    drivetrain_gyro.calibrate()\n    while drivetrain_gyro.is_calibrating():\n        sleep(25, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n#endregion VEXcode Generated Robot Configuration\nvexcode_vision_21_object_index = None\nvexcode_vision_21_objects = None\nobjectCount = 0\ni = 0\nbestAspect = 0\narea = 0\nbestIndex = 0\naspectRatio = 0\naspectError = 0\nMaxAspectError = 0\nTargetAspect = 0\nbestAspectError = 0\nMinimumArea = 0\nMinAspectError = 0\nBaseForAngleCalc = 0\nXTolerance = 0\n\ndef FindBestVisionObject_Visualize(FindBestVisionObject_Visualize__Visualize):\n    global objectCount, i, bestAspect, area, bestIndex, aspectRatio, aspectError, MaxAspectError, TargetAspect, bestAspectError, MinimumArea, MinAspectError, BaseForAngleCalc, XTolerance, vexcode_vision_21_object_index, vexcode_vision_21_objects\n    i = 1\n    bestIndex = 1\n    bestAspectError = 0\n    bestAspect = 0\n    if vexcode_vision_21_objects is not None:\n        while i < len(vexcode_vision_21_objects) + 1:\n            vexcode_vision_21_object_index = i - 1\n            brain.screen.set_fill_color(Color.WHITE)\n            area = vexcode_vision_21_objects[vexcode_vision_21_object_index].width * vexcode_vision_21_objects[vexcode_vision_21_object_index].height\n            if area > MinimumArea:\n                brain.screen.set_fill_color(Color.GREEN)\n                aspectRatio = (vexcode_vision_21_objects[vexcode_vision_21_object_index].height * 100) / vexcode_vision_21_objects[vexcode_vision_21_object_index].width\n                aspectError = aspectRatio / TargetAspect\n                if aspectError < MaxAspectError and aspectError > MinAspectError:\n                    brain.screen.set_fill_color(Color.RED)\n                    bestIndex = i\n                    bestAspectError = aspectError\n                    bestAspect = aspectRatio\n                else:\n                    pass\n            else:\n                pass\n            i = i + 1\n            wait(5, MSEC)\n    vexcode_vision_21_object_index = bestIndex - 1\n    if FindBestVisionObject_Visualize__Visualize:\n        brain.screen.draw_rectangle(200, 50, vexcode_vision_21_objects[vexcode_vision_21_object_index].width, vexcode_vision_21_objects[vexcode_vision_21_object_index].height)\n\ndef TurnToBestObject():\n    global objectCount, i, bestAspect, area, bestIndex, aspectRatio, aspectError, MaxAspectError, TargetAspect, bestAspectError, MinimumArea, MinAspectError, BaseForAngleCalc, XTolerance, vexcode_vision_21_object_index, vexcode_vision_21_objects\n    if math.fabs(vexcode_vision_21_objects[vexcode_vision_21_object_index].centerX - 180) > XTolerance:\n        drivetrain.turn_to_heading((drivetrain.heading() + math.atan((vexcode_vision_21_objects[vexcode_vision_21_object_index].centerX - 180) / BaseForAngleCalc) / math.pi * 180), DEGREES, wait=True)\n    else:\n        drivetrain.stop()\n\ndef when_started1():\n    global objectCount, i, bestAspect, area, bestIndex, aspectRatio, aspectError, MaxAspectError, TargetAspect, bestAspectError, MinimumArea, MinAspectError, BaseForAngleCalc, XTolerance, vexcode_vision_21_object_index, vexcode_vision_21_objects\n    brain.screen.set_fill_color(Color.RED)\n    drivetrain.set_stopping(COAST)\n    drivetrain.set_turn_velocity(100, PERCENT)\n    drivetrain.set_heading(0, DEGREES)\n    XTolerance = 30\n    BaseForAngleCalc = 160\n    MinimumArea = 10000\n    TargetAspect = 100\n    MaxAspectError = 1.5\n    MinAspectError = 0.7\n    while True:\n        vexcode_vision_21_objects = vision_21.take_snapshot(vision_21__SIG_1)\n        if vexcode_vision_21_objects is not None and len(vexcode_vision_21_objects) > 0:\n            FindBestVisionObject_Visualize(True)\n            TurnToBestObject()\n        else:\n            drivetrain.stop()\n        wait(5, MSEC)\n\n# Calibrate the Drivetrain\ncalibrate_drivetrain()\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[21],"name":"vision_21","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":55,\"signatures\":[{\"name\":\"SIG_1\",\"parameters\":{\"uMin\":5079,\"uMax\":5957,\"uMean\":5518,\"vMin\":273,\"vMax\":655,\"vMean\":464,\"rgb\":10510951,\"type\":0,\"name\":\"SIG_1\"},\"range\":3},{\"name\":\"SIG_2\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_2\"},\"range\":3},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1,10,2],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"threewire","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":22}],"slot":1,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}