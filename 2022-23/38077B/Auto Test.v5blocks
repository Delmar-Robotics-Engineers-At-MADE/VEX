{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\"%S@IPqfV4xZAw.j{vXyZ\" x=\"10\" y=\"10\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"B~GSFG~$RFA`Sn3OJh)W\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"2w,Oa474mW^#WO)G;]h9\"><field name=\"NUM\">100</field></shadow></value></block></next></block><block type=\"v5_events_when_autonomous\" id=\"_g1,i|`km_//K+j@.eyW\" x=\"10\" y=\"170\"><next><block type=\"v5_control_repeat_until\" id=\"1qe(89.$/sOhn23U`/Y]\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_bumper\" id=\".,gMlKF3#VZKu^{nRsk/\"><field name=\"BUMPER\">BumperA</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_drivetrain_drive\" id=\"TR6I,M(|4B6+$TTReoai\"><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_motion_stop_driving\" id=\";Vz`L+Pm6-P9WN1^;7;K\"><next><block type=\"v5_drivetrain_drive_for\" id=\"[X]bwKWoy!l8)4]G7u!~\"><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"i@BJflVYBlD5;T*jZTS)\"><field name=\"NUM\">500</field></shadow></value><next><block type=\"v5_motion_spin\" id=\",Y)c,+udPN+:g(I9-)hM\"><field name=\"MOTOR\">LeftHook</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"UjUcUgCj#MM`bnkyf5$i\"><field name=\"MOTOR\">RightHook</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait\" id=\"Bcq7o{-{;I/*yI]dyQGw\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"8)O%[j2|B79%flQ:r$FC\"><field name=\"NUM\">2.3</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"xhE6d?.5ppzS]ut+,TD;\"><field name=\"MOTOR\">LeftHook</field><next><block type=\"v5_motion_stop_motor\" id=\"}2-Xj_WqfOSdn?_~+rDz\"><field name=\"MOTOR\">RightHook</field><next><block type=\"v5_motion_spin_for\" id=\"X:*oi~]-35h9wO$/`azC\"><field name=\"MOTOR\">HookMotorGroup</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"}579g{tNoo^MS(wHRy:9\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"v5_drivetrain_drive_for\" id=\"glle1~%7=x|lISkJYdoZ\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"xk63XqduS6+k:ys+.6Zi\"><field name=\"NUM\">550</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"9{0Q1/a=Do9+x-]3S[Ys\"><field name=\"MOTOR\">HookMotorGroup</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"epVKnm%0!My5E4Dtglsu\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"v5_drivetrain_drive\" id=\"tl(+~,/7=v/)2]g4OGUT\"><field name=\"DIRECTION\">rev</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[4,2,9],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[11,20],"name":"HookMotorGroup","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[1],"name":"LeftHook","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[3],"name":"RightHook","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22},{"port":[1],"name":"BumperA","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT4, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT2, ratio18_1, true);\ninertial DrivetrainInertial = inertial(PORT9);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 40, mm, 1);\n\nmotor HookMotorGroupMotorA = motor(PORT11, ratio36_1, false);\nmotor HookMotorGroupMotorB = motor(PORT20, ratio36_1, true);\nmotor_group HookMotorGroup = motor_group(HookMotorGroupMotorA, HookMotorGroupMotorB);\n\nmotor LeftHook = motor(PORT1, ratio36_1, true);\n\nmotor RightHook = motor(PORT3, ratio36_1, false);\n\nbumper BumperA = bumper(Brain.ThreeWirePort.A);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\ncompetition Competition;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.setDriveVelocity(100.0, percent);\n  return 0;\n}\n\n// \"when autonomous\" hat block\nint onauton_autonomous_0() {\n  while (!BumperA.pressing()) {\n    Drivetrain.drive(forward);\n  wait(5, msec);\n  }\n  Drivetrain.stop();\n  Drivetrain.driveFor(reverse, 500.0, mm, true);\n  LeftHook.spin(forward);\n  RightHook.spin(forward);\n  wait(2.3, seconds);\n  LeftHook.stop();\n  RightHook.stop();\n  HookMotorGroup.spinFor(forward, 1000.0, degrees, true);\n  Drivetrain.driveFor(forward, 550.0, mm, true);\n  HookMotorGroup.spinFor(forward, 50.0, degrees, true);\n  Drivetrain.drive(reverse);\n  return 0;\n}\n\nvoid VEXcode_driver_task() {\n  // Start the driver control tasks....\n\n  while(Competition.isDriverControl() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n\n  return;\n}\n\nvoid VEXcode_auton_task() {\n  // Start the auton control tasks....\n  vex::task auto0(onauton_autonomous_0);\n  while(Competition.isAutonomous() && Competition.isEnabled()) {this_thread::sleep_for(10);}\n  auto0.stop();\n  return;\n}\n\n\n\nint main() {\n  vex::competition::bStopTasksBetweenModes = false;\n  Competition.autonomous(VEXcode_auton_task);\n  Competition.drivercontrol(VEXcode_driver_task);\n\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}