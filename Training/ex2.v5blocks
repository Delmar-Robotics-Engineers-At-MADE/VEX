{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_other_comment\" id=\"UiS0mL*lJ(bCTGmTfwh$\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"gb`[qVOv_VLs-WKqqA[`\"><field name=\"comment\">Set the default motor braking behavior</field></shadow></value><next><block type=\"v5_motion_set_motor_torque\" id=\"D#6EJu5b1zlqTtIhP,WB\"><field name=\"MOTOR\">Motor3</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"XCQ*w.h*~MPQ^}kSDmC_\"><field name=\"NUM\">20</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"s?P3@nLmN=]Gi^aN|hSZ\"><field name=\"MOTOR\">Motor3</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"z2sXju(fmoOcf@Mfi3m2\"><field name=\"NUM\">20</field></shadow></value></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"8%`:!a95.6lu0TO^|aXF\" x=\"90\" y=\"510\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_while\" id=\"zQtIGJ-4[POfPmRcie`A\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\")5aeZ*SAJKK5^tg8Bg)|\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"+F,:`?0pL9NqD,$[xt:q\"><field name=\"MOTOR\">Motor3</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"WW1,TW9oU,S;R(GPBv)3\"><field name=\"MOTOR\">Motor3</field></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"R=7~O+VnFGup;9]8o(B|\" x=\"110\" y=\"930\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_while\" id=\"G^(Q|d1.G5~!QXn2.86(\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"^|AtV1yNqjB%BbMFL6;(\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\".7f?*?p.],0a=K/`|EP,\"><field name=\"MOTOR\">Motor3</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"Yn=bs%lyl4bhel%FLpu)\"><field name=\"MOTOR\">Motor3</field></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[3],"name":"Motor3","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"}}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor Motor3 = motor(PORT3, ratio18_1, false);\n\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Set the default motor braking behavior\n  Motor3.setMaxTorque(20.0, percent);\n  Motor3.setVelocity(20.0, percent);\n  return 0;\n}\n\n// \"when Controller1 ButtonR1 pressed\" hat block\nvoid onevent_Controller1ButtonR1_pressed_0() {\n  while (Controller1.ButtonR1.pressing()) {\n    Motor3.spin(forward);\n  wait(5, msec);\n  }\n  Motor3.stop();\n}\n\n// \"when Controller1 ButtonR2 pressed\" hat block\nvoid onevent_Controller1ButtonR2_pressed_0() {\n  while (Controller1.ButtonR2.pressing()) {\n    Motor3.spin(reverse);\n  wait(5, msec);\n  }\n  Motor3.stop();\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonR1.pressed(onevent_Controller1ButtonR1_pressed_0);\n  Controller1.ButtonR2.pressed(onevent_Controller1ButtonR2_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}