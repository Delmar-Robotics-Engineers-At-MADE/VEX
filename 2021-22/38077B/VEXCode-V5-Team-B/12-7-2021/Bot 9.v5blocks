{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"broadcast_msg\" id=\"cB1p2+xl~=2lJ9oZRR.M\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable></variables><block type=\"v5_events_when_started\" id=\"M|m/*@[cDzm{Gl{o.xKU\" x=\"50\" y=\"70\"><next><block type=\"v5_control_forever\" id=\"Q;XrGLutb}0]1k~^@GS~\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"tjgnU?HH.Mu2I$;acWn~\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"uH4}*z]?:5N:2M/J[.m!\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_repeat_until\" id=\"),C$w_fXCp1LZdDLi5z9\"><value name=\"CONDITION\"><block type=\"v5_operator_or\" id=\"bFqz~baRUBr,RThN%B^g\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_bumper\" id=\"/K*.?O}-R3J_P,CwYr5K\"><field name=\"BUMPER\">BumperA</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"JV$6ZrsC4H1oZx5FmAf5\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"5yXAJq(0VlfRi?#kkr.W\"><field name=\"MOTOR\">Motor20</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"z~H1[mbJ0o5ZX.f`I+tY\"><field name=\"MOTOR\">Motor20</field></block></next></block></statement><next><block type=\"v5_control_if_then\" id=\"Qo(j#LqZILM~:p87KDh=\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"GMAI8Yy=#3?)B[*3o-}Q\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_control_repeat_until\" id=\"Px^/*n]_2CBIdXzU5HwD\"><value name=\"CONDITION\"><block type=\"v5_operator_or\" id=\"wU(4SJ+7:0w,{.,(q2[W\"><value name=\"OPERAND1\"><block type=\"v5_sensing_pressing_bumper\" id=\"qz(}xB!@~{]Ce/WniDRA\"><field name=\"BUMPER\">BumperB</field></block></value><value name=\"OPERAND2\"><block type=\"v5_sensing_pressing_controller\" id=\"[6[@;}ws6yun=*rn6jf%\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL1</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"#~O:,fXn-an,FMkKb$Li\"><field name=\"MOTOR\">Motor20</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"hIz]!NsT=:sML2_`-Gfp\"><field name=\"MOTOR\">Motor20</field></block></next></block></statement></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[20],"name":"Motor20","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"BumperA","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[2],"name":"BumperB","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{"id":"partner"},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor Motor20 = motor(PORT20, ratio18_1, false);\n\nbumper BumperA = bumper(Brain.ThreeWirePort.A);\ncontroller Controller1 = controller(primary);\nbumper BumperB = bumper(Brain.ThreeWirePort.B);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\nevent message1 = event();\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    if (Controller1.ButtonL1.pressing()) {\n      while (!(BumperA.pressing() || Controller1.ButtonL2.pressing())) {\n        Motor20.spin(reverse);\n      wait(5, msec);\n      }\n      Motor20.stop();\n    }\n    if (Controller1.ButtonL2.pressing()) {\n      while (!(BumperB.pressing() || Controller1.ButtonL1.pressing())) {\n        Motor20.spin(forward);\n      wait(5, msec);\n      }\n      Motor20.stop();\n    }\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}