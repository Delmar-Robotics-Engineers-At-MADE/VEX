{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_motion_set_motor_position\" id=\"`;y,H%|qEVgW$j+E%#O+\"><field name=\"MOTOR\">Forklift</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"sY-8Th7`CI2YQYE#V42t\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"s[hq+%0{0d@wM%oEA$Rc\"><field name=\"MOTOR\">Forklift</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Uy7^,Kj.7V@aZ7H$5c6j\"><field name=\"NUM\">25</field></shadow></value><next><block type=\"v5_control_forever\" id=\"DJ;{[6+ceE%?F(iKGHF%\"><statement name=\"SUBSTACK\"><block type=\"v5_looks_set_cursor\" id=\"5m$`-nJJpjyt7Qp@X:I;\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"6BtvhxBJ4VNIKHgtpetG\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"anttINUX;2GE6~*!(v2s\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_clear_row\" id=\"GrLr$^{{Q}=VwB_=;;/`\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"xlM4b]~*Ud@jbp~EdLdx\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"3vT/X=-mrUp7.Zj`gfT~\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"~R`s,ryCc^.2vbY;fF^|\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_position_of_motor\" id=\"cEb2`%I:Es2T6XMEu=?f\"><field name=\"MOTOR\">Forklift</field><field name=\"UNITS\">deg</field></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"_bD.FQe_}]t/cRv2;eZb\"><field name=\"MOTOR\">LeftDrive</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"I7{k+q}TI9Z)y@rOWuw@\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_add\" id=\"|XB;0K{gO$!npgk)PomO\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"GqF`F%,p]vYrOu1[h4t9\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"[jx!%O~WN28ggFnH[Fd@\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"_R|7nD.Iq%0]mOE6=5_%\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"=EA9dX#mzDD$X!_3AL5*\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"un)m~0%p,MCMjF#cx+Qh\"><field name=\"MOTOR\">RightDrive</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"^Wa6#@aflrGoky3*oL}B\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_subtract\" id=\"9cD{nS5RrOoUs;AX{ori\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"W9)!jnef%jy-{rr-Ceai\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"6@VDJ^cw}Arp/Gm,V8eE\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"zzLM_)bTDH?(]eB2k)O?\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"tlnkOrVl-Ie9U69G,Y88\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><next><block type=\"v5_motion_spin\" id=\"4wznrtFSNEeAyPVtE*Ty\"><field name=\"MOTOR\">LeftDrive</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"O),g.g4oh]qoz/`KF;$~\"><field name=\"MOTOR\">RightDrive</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"4ui0kd=5._nXRS8w5:5K\" x=\"630\" y=\"270\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_while\" id=\"aDE0yQaHwGB_zwjq(bBn\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\".~2Dm8g3$/X!,ss@5l0-\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR1</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"/lS23QFp.T/As#=G*yci\"><field name=\"MOTOR\">Forklift</field><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"9%3tvAaU6#Ulu.VYEC`]\"><field name=\"MOTOR\">Forklift</field></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"AfX^MKzs`#2R8);6kOvg\" x=\"630\" y=\"550\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_while\" id=\"I;v/?`|NAQUdhuNhrIAh\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"_j{K#waLERpl20[C5uS,\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"9s$Ac^Odf~A!=WMyIQ]r\"><field name=\"MOTOR\">Forklift</field><field name=\"DIRECTION\">rev</field></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"G5dGc$9nsdxuEYP{K~0k\"><field name=\"MOTOR\">Forklift</field></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[8,9],"name":"Forklift","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[19,20],"name":"LeftDrive","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[1,2],"name":"RightDrive","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor ForkliftMotorA = motor(PORT8, ratio18_1, true);\nmotor ForkliftMotorB = motor(PORT9, ratio18_1, false);\nmotor_group Forklift = motor_group(ForkliftMotorA, ForkliftMotorB);\n\nmotor LeftDriveMotorA = motor(PORT19, ratio18_1, true);\nmotor LeftDriveMotorB = motor(PORT20, ratio18_1, false);\nmotor_group LeftDrive = motor_group(LeftDriveMotorA, LeftDriveMotorB);\n\nmotor RightDriveMotorA = motor(PORT1, ratio18_1, true);\nmotor RightDriveMotorB = motor(PORT2, ratio18_1, false);\nmotor_group RightDrive = motor_group(RightDriveMotorA, RightDriveMotorB);\n\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Forklift.setRotation(0.0, degrees);\n  Forklift.setVelocity(25.0, percent);\n  while (true) {\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.clearLine(1);\n    Brain.Screen.setCursor(Brain.Screen.row(), 1);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Forklift.rotation(degrees)));\n    LeftDrive.setVelocity((Controller1.Axis3.position() + Controller1.Axis1.position()), percent);\n    RightDrive.setVelocity((Controller1.Axis3.position() - Controller1.Axis1.position()), percent);\n    LeftDrive.spin(forward);\n    RightDrive.spin(forward);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when Controller1 ButtonR1 pressed\" hat block\nvoid onevent_Controller1ButtonR1_pressed_0() {\n  while (Controller1.ButtonR1.pressing()) {\n    Forklift.spin(forward);\n  wait(5, msec);\n  }\n  Forklift.stop();\n}\n\n// \"when Controller1 ButtonR2 pressed\" hat block\nvoid onevent_Controller1ButtonR2_pressed_0() {\n  while (Controller1.ButtonR2.pressing()) {\n    Forklift.spin(reverse);\n  wait(5, msec);\n  }\n  Forklift.stop();\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonR1.pressed(onevent_Controller1ButtonR1_pressed_0);\n  Controller1.ButtonR2.pressed(onevent_Controller1ButtonR2_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}