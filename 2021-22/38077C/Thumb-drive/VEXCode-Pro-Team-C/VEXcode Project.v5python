{"mode":"Text","textContent":"vexcode_brain_precision = 0\nvexcode_console_precision = 0\nvexcode_controller_1_precision = 0\nmyVariable = 0\n\ndef when_started1():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    pass\n\ndef pickup1():\n    fork_motor_group.spin_to_position(900, DEGREES)\n    drivetrain.drive_for(REVERSE, 36, INCHES)\n    drivetrain.turn_to_heading(270, DEGREES)\n    drivetrain.drive_for(FORWARD, 12, INCHES)\n    fork_motor_group.spin_to_position(1800, DEGREES)\n\ndef onevent_controller_1buttonA_pressed_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    brain.screen.clear_screen()\n    brain.screen.print(\"You should be listening to Mr blue sky.\")\n\ndef onauton_autonomous_0():\n    global myVariable, vexcode_brain_precision, vexcode_console_precision, vexcode_controller_1_precision\n    pass\n\n# create a function for handling the starting and stopping of all autonomous tasks\ndef vexcode_auton_function():\n    # Start the autonomous control tasks\n    drivetrain.drive_for(FORWARD, 42, INCHES)\n    drivetrain.turn_to_heading(90, DEGREES)\n    drivetrain.drive_for(FORWARD, 18, INCHES)\n    fork_motor_group.spin_to_position(1800, DEGREES)\n    drivetrain.turn_to_heading(360, DEGREES)\n    drivetrain.drive_for(FORWARD, 12, INCHES)\n    pickup1()\n    auton_task_0 = Thread( onauton_autonomous_0 )\n    # wait for the driver control period to end\n    while( competition.is_autonomous() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the autonomous control tasks\n    auton_task_0.stop()\n\ndef vexcode_driver_function():\n    # Start the driver control tasks\n    # wait for the driver control period to end\n    while( competition.is_driver_control() and competition.is_enabled() ):\n        # wait 10 milliseconds before checking again\n        wait( 10, MSEC )\n    # Stop the driver control tasks\n\n# register the competition functions\ncompetition = Competition( vexcode_driver_function, vexcode_auton_function )\n\n# system event handlers\ncontroller_1.buttonA.pressed(onevent_controller_1buttonA_pressed_0)\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n\nwhen_started1()\n","textLanguage":"python","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}