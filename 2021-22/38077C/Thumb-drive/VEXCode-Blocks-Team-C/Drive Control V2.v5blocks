{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_controller_button\" id=\"O1qROYH`)v))FjqbL78?\" x=\"190\" y=\"-150\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_repeat_until\" id=\"wseqqYglc./!n%xC~%J3\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"BwgDi]X/DS7oX$QDUx[:\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\";%7ZI,L7PANI)3/wcd?W\"><field name=\"MOTOR\">ArmMoter1</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"Q$^LM{@sXu-::/lh@XM-\"><field name=\"MOTOR\">ArmMotor2</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement><next><block type=\"v5_motion_stop_motor\" id=\".+|F=i?D-R^S#IQ7=}2W\"><field name=\"MOTOR\">ArmMotor2</field><next><block type=\"v5_motion_stop_motor\" id=\"@Lh|0K@3#a`iMEA*b6c|\"><field name=\"MOTOR\">ArmMoter1</field></block></next></block></next></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-30\" y=\"110\"><next><block type=\"v5_control_forever\" id=\"rnTspjG2r;K3T8t0ZHf2\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"6o)Z0X|lxe@H*E5:0@C=\"><field name=\"MOTOR\">LeftMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"87A;Sz?Q,B}YDz41fm7h\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\":xv)a!{%+UyvEJ,@@|]Y\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis3</field></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"7qruFdH*WqRh3`xZ:1sh\"><field name=\"MOTOR\">RightMotor</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"N0R`6o)wLqn:41cBxv(]\"><field name=\"NUM\">50</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"h{O:;E-_CMpl,wE1lG:3\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><next><block type=\"v5_motion_spin\" id=\"m*ylD0uJXHdHJA4SfhIn\"><field name=\"MOTOR\">LeftMotor</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"7}%.^1v=|P:WW!l;~D~?\"><field name=\"MOTOR\">RightMotor</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></statement></block></next></block><block type=\"v5_events_when_controller_button\" id=\"81__Yay@#ua*BUmYe)i*\" x=\"630\" y=\"150\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_control_repeat_until\" id=\"`1;W8[^722b*Ql{xUGuT\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"~KFy`RGLl3JGN!O;xB!|\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_motion_spin\" id=\"@|a9y?{fRTj_OU)J@0cK\"><field name=\"MOTOR\">ArmMoter1</field><field name=\"DIRECTION\">rev</field><next><block type=\"v5_motion_spin\" id=\"j_E!!nXi@_4EH,|nJ^YW\"><field name=\"MOTOR\">ArmMotor2</field><field name=\"DIRECTION\">rev</field></block></next></block></statement><next><block type=\"v5_motion_stop_motor\" id=\"bBRuCpg*hl`{yn;S7Jr_\"><field name=\"MOTOR\">ArmMotor2</field><next><block type=\"v5_motion_stop_motor\" id=\"BA2||,/Vc-`[_}G-Rpz-\"><field name=\"MOTOR\">ArmMoter1</field></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"true","right":"","rightDir":"false","upDown":"","upDownDir":"true","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[2],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[3],"name":"ArmMoter1","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"close","rev":"open","gear":"ratio18_1","id":"partner"},"triportSourcePort":22},{"port":[4],"name":"ArmMotor2","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"up","rev":"down","gear":"ratio18_1","id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20211013.15.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor LeftMotor = motor(PORT1, ratio18_1, false);\n\nmotor RightMotor = motor(PORT2, ratio18_1, true);\n\nmotor ArmMoter1 = motor(PORT3, ratio18_1, false);\n\nmotor ArmMotor2 = motor(PORT4, ratio18_1, false);\n\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when Controller1 ButtonUp pressed\" hat block\nvoid onevent_Controller1ButtonUp_pressed_0() {\n  while (!Controller1.ButtonUp.pressing()) {\n    ArmMoter1.spin(forward);\n    ArmMotor2.spin(forward);\n  wait(5, msec);\n  }\n  ArmMotor2.stop();\n  ArmMoter1.stop();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    LeftMotor.setVelocity(Controller1.Axis3.position(), percent);\n    RightMotor.setVelocity(Controller1.Axis2.position(), percent);\n    LeftMotor.spin(forward);\n    RightMotor.spin(forward);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n// \"when Controller1 ButtonDown pressed\" hat block\nvoid onevent_Controller1ButtonDown_pressed_0() {\n  while (!Controller1.ButtonDown.pressing()) {\n    ArmMoter1.spin(reverse);\n    ArmMotor2.spin(reverse);\n  wait(5, msec);\n  }\n  ArmMotor2.stop();\n  ArmMoter1.stop();\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonUp.pressed(onevent_Controller1ButtonUp_pressed_0);\n  Controller1.ButtonDown.pressed(onevent_Controller1ButtonDown_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}